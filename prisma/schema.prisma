// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String 
  email String @unique
  phone String @unique
  password String 
  address String 
  orders Order[]
  ratings Rating[]
  favorite_restaurant FavoriteRestaurant[]
  roles Role @default(USER)
}
enum Role {
  USER
  ADMIN
}

model Restaurant {
  id Int @id @default(autoincrement())
  name String
  address String
  openHours String
  foods Food[]
  ratings Rating[]
  offers Offer[]
  Order Order[]
}

model Food {
  id Int @id @default(autoincrement())
  restaurantId Int
  name String
  price Int
  description String
  availability Boolean
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id Int @id @default(autoincrement())
  userId Int
  restaurantId Int 
  totalPrice Float
  status String
  orderDate DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  orderItems OrderItem[]
}

model OrderItem { 
  id Int @id @default(autoincrement())
  orderId Int 
  foodId Int 
  quantity Int 
  subtotal Float
  order Order @relation(fields: [orderId], references: [id])
  item Food @relation(fields: [foodId], references: [id])
}

model Rating {
  id Int @id @default(autoincrement())
  userId Int 
  restaurantId Int 
  ratingValue Int 
  comment String?
  user User @relation(fields: [userId], references: [id])
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
}

model FavoriteRestaurant{
   id Int @id @default(autoincrement())
   userId Int 
   restaurantId Int 
   user User @relation(fields: [userId], references: [id])
}

model Offer {
  id Int @id @default(autoincrement())
  restaurantID Int 
  description String
  discountPercentage Float 
  validFrom DateTime
  validTo DateTime
  restaurant Restaurant @relation(fields: [restaurantID], references: [id])
}

